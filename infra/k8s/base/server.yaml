apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: tagpay
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tagpay
      component: server
  template:
    metadata:
      labels:
        app: tagpay
        component: server
    spec:
      serviceAccountName: tagpay-service-account
      containers:
        - name: server
          image: tagpay-server:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: tagpay-config
                  key: NODE_ENV
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: tagpay-config
                  key: PORT
            - name: DATABASE_URL
              value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: tagpay-config
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: tagpay-config
                  key: DATABASE_PORT
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: tagpay-config
                  key: DATABASE_NAME
            - name: DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  name: tagpay-config
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tagpay-secrets
                  key: DATABASE_PASSWORD
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: tagpay-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: tagpay-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tagpay-secrets
                  key: REDIS_PASSWORD
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: tagpay-secrets
                  key: JWT_SECRET
            - name: DOJAH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: tagpay-secrets
                  key: DOJAH_API_KEY
            - name: TERMII_API_KEY
              valueFrom:
                secretKeyRef:
                  name: tagpay-secrets
                  key: TERMII_API_KEY
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: tagpay-secrets
                  key: ENCRYPTION_KEY
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          startupProbe:
            httpGet:
              path: /api/v1/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: server-service
  namespace: tagpay
spec:
  selector:
    app: tagpay
    component: server
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
  type: ClusterIP
