version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tagpay-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: tagpay_dev
      POSTGRES_USER: tagpay_user
      POSTGRES_PASSWORD: tagpay_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./apps/server/db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - tagpay-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tagpay_user -d tagpay_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tagpay-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - tagpay-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # TagPay Server API (Development)
  server:
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile.dev
      target: installer
    container_name: tagpay-server-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://tagpay_user:tagpay_password@postgres:5432/tagpay_dev
      REDIS_URL: redis://redis:6379
      # Add other environment variables as needed
      # JWT_SECRET: your_jwt_secret_dev
      # DOJAH_API_KEY: your_dojah_api_key
      # TERMII_API_KEY: your_termii_api_key
    ports:
      - "3000:3000"
    volumes:
      - ./apps/server:/app/apps/server
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tagpay-dev-network
    command: npm run dev

  # TagPay Admin Dashboard (Development)
  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile.dev
      target: installer
    container_name: tagpay-admin-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./apps/admin:/app/apps/admin
      - /app/node_modules
    depends_on:
      - server
    networks:
      - tagpay-dev-network
    command: npm run dev -- --host 0.0.0.0

  # Nginx Reverse Proxy (Development)
  nginx:
    build:
      context: ./infra/nginx
      dockerfile: Dockerfile.dev
    container_name: tagpay-nginx-dev
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      server:
        condition: service_healthy
      admin:
        condition: service_healthy
    networks:
      - tagpay-dev-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  tagpay-dev-network:
    driver: bridge
