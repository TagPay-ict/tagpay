version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tagpay-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tagpay
      POSTGRES_USER: tagpay_user
      POSTGRES_PASSWORD: tagpay_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/server/db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - tagpay-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tagpay_user -d tagpay"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tagpay-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tagpay-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # TagPay Server API
  server:
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
      target: runner
    container_name: tagpay-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://tagpay_user:tagpay_password@postgres:5432/tagpay
      REDIS_URL: redis://redis:6379
      # Add other environment variables as needed
      # JWT_SECRET: your_jwt_secret
      # DOJAH_API_KEY: your_dojah_api_key
      # TERMII_API_KEY: your_termii_api_key
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tagpay-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # TagPay Admin Dashboard
  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
      target: runner
    container_name: tagpay-admin
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - tagpay-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    build:
      context: ./infra/nginx
      dockerfile: Dockerfile
    container_name: tagpay-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      server:
        condition: service_healthy
      admin:
        condition: service_healthy
    networks:
      - tagpay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  tagpay-network:
    driver: bridge
